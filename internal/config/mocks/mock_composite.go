// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jorgejr568/cloudflare-cli/internal/config (interfaces: Composite)
//
// Generated by this command:
//
//	mockgen -destination mocks/mock_composite_test.go . Composite
//

// Package mock_config is a generated GoMock package.
package mock_config

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockComposite is a mock of Composite interface.
type MockComposite struct {
	ctrl     *gomock.Controller
	recorder *MockCompositeMockRecorder
}

// MockCompositeMockRecorder is the mock recorder for MockComposite.
type MockCompositeMockRecorder struct {
	mock *MockComposite
}

// NewMockComposite creates a new mock instance.
func NewMockComposite(ctrl *gomock.Controller) *MockComposite {
	mock := &MockComposite{ctrl: ctrl}
	mock.recorder = &MockCompositeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockComposite) EXPECT() *MockCompositeMockRecorder {
	return m.recorder
}

// CloudflareAPIKey mocks base method.
func (m *MockComposite) CloudflareAPIKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloudflareAPIKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// CloudflareAPIKey indicates an expected call of CloudflareAPIKey.
func (mr *MockCompositeMockRecorder) CloudflareAPIKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloudflareAPIKey", reflect.TypeOf((*MockComposite)(nil).CloudflareAPIKey))
}
